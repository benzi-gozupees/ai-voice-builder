We are now ready to implement the "Call Logs" section in our dashboard. Please follow this exact flow and DO NOT touch or break any existing functionality in the dashboard, authentication, or assistant creation modules.

üîß FUNCTIONAL REQUIREMENTS
1. New Sidebar Tab: "Call Logs"
Add a new sidebar item titled Call Logs.

Route: /dashboard/calls (under tenant-protected layout).

Only accessible to logged-in tenants.

üìä CALL LOGS PAGE
2. Log Table Layout (Mimic VAPI UI)
Show all calls for the currently logged-in tenant only.

‚úÖ Fetch Data From:

GET /logs?type=Call from the VAPI API

Filter the results where metadata.tenantId === currentTenantId (this is already available in session)

Store them in call_logs table (Postgres or current DB) and show from DB

Sync fresh logs every hour via background job

Add a "Sync Now" button to manually trigger sync

‚úÖ Columns to Show:

Field	Display Label
call.id	Call ID (shortened w/ copy)
assistant.name	Assistant Name
metadata.tenantId	Tenant ID (hidden filter)
customerPhoneNumber	Customer Number (show type: web/inbound)
call.endedReason	Ended Reason (badge)
call.successEvaluation	Result (Pass/Fail) badge
call.startedAt	Start Date/Time
call.durationSeconds	Duration (formatted)

‚úÖ Features:

"Export to CSV" button (future)

Filter buttons (Success, Failed, Transferred ‚Äî optional now)

Clean pagination and loader UI

üéß CALL DETAILS EXPAND PANEL
When a user clicks any row in the log, open a right-hand drawer-style panel exactly like VAPI.

This drawer includes:

a. Recording Preview
Display waveform graphic using a placeholder (actual waveform not needed now)

Play/pause button for audio

Playback speed toggle

Show duration

Audio source: call.artifact.recording.mono.combinedUrl

b. Transcript Viewer
Display formatted transcript from call.artifact.transcript

Separate lines for User: and AI: roles

Scrollable box with clear font and padding

Optional Tabs (don‚Äôt implement yet, just leave placeholders):
Logs

Analysis

Messages

Cost

üíæ DATABASE REQUIREMENTS
Create a new table:

Table: call_logs

Column	Type	Description
id	UUID	VAPI call ID (PK)
tenantId	UUID	Internal tenant identifier
assistantId	UUID	Assistant ID used in the call
assistantName	String	From VAPI
phoneCustomer	String	Customer phone or web
phoneAssistant	String	Assistant number (optional)
startedAt	Timestamp	Call start
duration	Integer	Duration in seconds
result	Enum	pass, fail, null
endedReason	String	silence_timeout, user_ended, etc.
audioUrl	String	mono.combinedUrl
transcript	JSON/Text	full transcript object
syncedAt	Timestamp	last sync

‚úÖ Add Sync job:

Background job to fetch new logs from VAPI every 60 mins

Only fetch logs updated after latest syncedAt

Deduplicate based on call.id

‚úÖ Manual Sync:

On dashboard: "Sync Now" button at top-right

Triggers /api/sync/calls on backend

üîê SECURITY
Only show logs for currently logged-in tenant

Do not show logs for other tenants

Make sure call ID, audio URL, transcript, etc. are only accessible via secure routes

‚úÖ COMPLETION CHECKLIST
 Sidebar: ‚ÄúCall Logs‚Äù visible

 List of call logs loads from DB

 Drawer opens on click with audio + transcript

 Sync job created (every 60 mins)

 Manual ‚ÄúSync Now‚Äù works

 No breakage in Assistant, Calendar, or Knowledgebase pages

Make sure the design matches the elegance of our existing UI and use clean reusable components. Keep code modular, readable, and minimal.