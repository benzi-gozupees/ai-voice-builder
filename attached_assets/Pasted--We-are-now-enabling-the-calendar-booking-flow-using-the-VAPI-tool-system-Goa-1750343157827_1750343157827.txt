








We are now enabling the calendar booking flow using the VAPI tool system.

✅ Goal
Once the user has successfully connected their Google Calendar account:

✅ Show Calendar Integration as “enabled” in the configuration status section

✅ Display a toggle switch labeled “Enable Appointment Booking”

🟢 When toggled on, the following should happen:

The assistant’s system prompt is updated by appending a pre-written tool usage chunk

The assistant’s tool config is updated to include two specific tools

We set assistantOverrides.variableValues with tenantId and assistantId

Make sure this is implemented without affecting any existing assistant behavior.

🔧 Tool Details
You will be given the following:

Tool IDs:

Google_Calendar_Availability: b0620a2a-b996-4120-a797-cec3035a6119

Google_Calendar_Event: d1107698-f804-4d9a-89a2-e3b35d009e6e

Prompt chunk to append (provided below)

Variables to inject:

{
  "assistantOverrides": {
    "variableValues": {
      "tenantId": "TENANT_ID_HERE",
      "assistantId": "ASSISTANT_ID_HERE"
    }
  }
}
✅ Step-by-Step Instructions
1. UI Update – Assistant Configuration Page
If calendar has been connected (calendar.isConnected === true):

Change “Calendar Integration (Coming Soon)” to ✅ “Calendar Integration Enabled”

Show a toggle switch labeled Enable Appointment Booking

Place this near the system prompt box or embed tab for visibility

Default toggle state should reflect whether Calendar_Availability is already linked

2. On Toggle Enablement
When user enables the toggle:

Fetch the existing assistant config using GET /assistants/{id} (VAPI API)

Append the predefined tool usage prompt to the existing instructions

Preserve all existing assistant properties:

voice, model, tools, firstMessage, stopWords, etc.

Patch the assistant using PATCH /assistants/{id} with the following updates:

Updated prompt (instructions)

Tools array (add TOOL_ID_1 and TOOL_ID_2)

Add the two variable values in assistantOverrides.variableValues

Keep existing tool IDs (don't remove if present)

✅ Make sure patching doesn’t overwrite existing tools — merge instead of replace

🧠 System Prompt Chunk to Append

" Tool Invocation Logic (insert after availability step)
When the user is ready to check available times:


Use the tool Google_Calendar_Availability to check open appointment slots.
Send the following in the request body:
if the user does not provide a preferred time use tomorrows date that you can calculate by using todays date and time that is {{now}}

{
  "tenantId": "{{tenantId}}",
  "assistantId": "{{assistantId}}",
  "preferredDate": "{{preferred_date}}"
}
Use the returned availability list to present 2–3 options conversationally:

“I’ve got {{slot_1}}, {{slot_2}}, or {{slot_3}}. Which one works best for you?”

🗓️ Tool to Book Appointment (after user selects a slot)
Once confirmed, call the tool Google_Calendar_Event with the following payload:


{
  "tenantId": "{{tenantId}}",
  "assistantId": "{{assistantId}}",
  "fullName": "{{user_name}}",
  "email": "{{user_email}}",
  "startDateTime": "{{confirmed_time}}",
  "timeZone": "{{user_timezone}}",
  "description": "{{user_type}} patient requesting {{service}} under {{department}}. {{notes}} Contact: {{phone_number}}"
}
Ensure that the assistant:

Asks for all required values one at a time (already handled in your flow)

Compiles the description naturally

Validates all key fields before calling the tool

Repeats the date/time and service before confirming booking "


Technical Notes
Use the same clean update method as already implemented for system prompt editing

Do not hardcode assistant IDs — always use current one from route or context

This toggle should not run if tools are already added and prompt already includes tool call block

Debounce or block repeat triggers if already patched